[{"_path":"/nuxt3/features/data-fetch","_dir":"features","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"数据获取","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"数据获取"},"children":[{"type":"text","value":"数据获取"}]},{"type":"element","tag":"h2","props":{"id":"基础"},"children":[{"type":"text","value":"基础"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt3"}]},{"type":"text","value":" 中内置了以下四种请求的方法"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"useFetch"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"useLazyFetch"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"useAsyncData"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"useLazyAsyncData"}]}]},{"type":"element","tag":"code","props":{"code":"<script setup lang=\"ts\">\n// 参数一是 key\n// 参数二是请求 handler，返回请求的 promise\n// 解构出来的 data 为数据，error 为错误信息\nconst { data, error } = await useAsyncData('count', () => {\n    return new Promise(resolve => resolve('mock'))\n})\n</script>\n\n<template>\n    <div>\n        <div>data: {{ data }}</div>\n        <div>error: {{ error }}</div>\n    </div>\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<script setup lang=\"ts\">\n// 参数一是 key\n// 参数二是请求 handler，返回请求的 promise\n// 解构出来的 data 为数据，error 为错误信息\nconst { data, error } = await useAsyncData('count', () => {\n    return new Promise(resolve => resolve('mock'))\n})\n</script>\n\n<template>\n    <div>\n        <div>data: {{ data }}</div>\n        <div>error: {{ error }}</div>\n    </div>\n</template>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"内置的  "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$fetch"}]},{"type":"text","value":" 可以直接进行请求"}]},{"type":"element","tag":"code","props":{"code":"<script setup lang=\"ts\">\nconst { data, error } = await useAsyncData('count', () => {\n    return $fetch('http://...') // 请求地址\n})\n</script>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<script setup lang=\"ts\">\nconst { data, error } = await useAsyncData('count', () => {\n    return $fetch('http://...') // 请求地址\n})\n</script>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"当然你可以用更简洁的 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useFetch"}]},{"type":"text","value":"，它会在内部自动生成 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"key"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"code","props":{"code":"<script setup lang=\"ts\">\nconst { data, error } = await useFetch('http://...') // 你的请求地址\n</script>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<script setup lang=\"ts\">\nconst { data, error } = await useFetch('http://...') // 你的请求地址\n</script>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useFetch"}]},{"type":"text","value":" 会在内部自动使用 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"$fetch"}]},{"type":"text","value":" 作为请求方法，所以没有 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useAsyncData"}]},{"type":"text","value":" 灵活。"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"lazy"},"children":[{"type":"text","value":"lazy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useFetch"}]},{"type":"text","value":" 和 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useAsyncData"}]},{"type":"text","value":" 会阻塞导航的跳转。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"例如，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"index"}]},{"type":"text","value":" 页面跳转到 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"home"}]},{"type":"text","value":" 页面"}]},{"type":"element","tag":"code","props":{"code":"<template>\n    <NuxtLink to=\"/home\"> to home</NuxtLink>\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<template>\n    <NuxtLink to=\"/home\"> to home</NuxtLink>\n</template>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"home"}]},{"type":"text","value":" 页面有 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useFetch"}]},{"type":"text","value":" 请求"}]},{"type":"element","tag":"code","props":{"code":"<!-- pages/home.vue -->\n<script lang=\"ts\" setup>\n// 以下请求将会阻塞导航的跳转\nconst { data } = await useFetch('http://localhost:4000')\n</script>\n\n<template>\n    <div>{{ data }}</div>\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!-- pages/home.vue -->\n<script lang=\"ts\" setup>\n// 以下请求将会阻塞导航的跳转\nconst { data } = await useFetch('http://localhost:4000')\n</script>\n\n<template>\n    <div>{{ data }}</div>\n</template>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而使用对应的 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"lazy"}]},{"type":"text","value":" 模式，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useLazyFetch"}]},{"type":"text","value":" 或 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useLazyAsyncData"}]},{"type":"text","value":" 可以让导航跳转不被阻塞"}]},{"type":"element","tag":"code","props":{"code":"<!-- pages/home.vue -->\n<script lang=\"ts\" setup>\n// 使用 useFetch 的 lazy 模式，不会阻塞导航跳转\nconst { data } = await useLazyFetch('http://localhost:4000')\n</script>\n\n<template>\n    <div>{{ data }}</div>\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!-- pages/home.vue -->\n<script lang=\"ts\" setup>\n// 使用 useFetch 的 lazy 模式，不会阻塞导航跳转\nconst { data } = await useLazyFetch('http://localhost:4000')\n</script>\n\n<template>\n    <div>{{ data }}</div>\n</template>\n"}]}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"注意"},"children":[{"type":"text","value":"注意"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"由于 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"nuxt3"}]},{"type":"text","value":" 默认是全 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"SSR"}]},{"type":"text","value":" 的渲染模式，所以相同的业务代码会在 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"node"}]},{"type":"text","value":" 和浏览器都跑一遍。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"这意味着大多数 "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"仅支持浏览器的请求库"}]},{"type":"text","value":" 可能需要被迫在特定生命周期节点中运行。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"具体可见 👉 "},{"type":"element","tag":"a","props":{"href":"https://staging-cn.vuejs.org/guide/scaling-up/ssr.html#access-to-platform-specific-apis","rel":["nofollow"]},"children":[{"type":"text","value":"SSR/访问平台特有 API"}]},{"type":"text","value":"。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"因为 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"axios"}]},{"type":"text","value":" 兼容 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"node"}]},{"type":"text","value":" 和浏览器双端的，所以你能够使用它进行请求。"}]},{"type":"element","tag":"code","props":{"code":"<script lang=\"ts\" setup>\nconst { data } = await axios.get('http://...') // 你的请求地址\n</script>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<script lang=\"ts\" setup>\nconst { data } = await axios.get('http://...') // 你的请求地址\n</script>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"不过还是推荐你使用内置请求方法。"}]}]},"sidebarDepth":1,"_type":"markdown","_id":"content:2.nuxt3:2.features:data-fetch.md","_source":"content","_file":"2.nuxt3/2.features/data-fetch.md","_extension":"md"},{"_path":"/nuxt3/features/layout-system","_dir":"features","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"布局系统","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"布局系统"},"children":[{"type":"text","value":"布局系统"}]},{"type":"element","tag":"h2","props":{"id":"基础"},"children":[{"type":"text","value":"基础"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"在 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"layouts"}]},{"type":"text","value":" 下创建的布局都可以应用到页面上"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"例如，创建 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"layouts/custom.vue"}]},{"type":"text","value":" 布局"}]},{"type":"element","tag":"code","props":{"code":"<!-- layouts/custom.vue -->\n<template>\n    <!-- 根元素是必需的 -->\n    <div>\n        custom\n        <slot /> <!-- 页面出口 -->\n    </div>\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!-- layouts/custom.vue -->\n<template>\n    <!-- 根元素是必需的 -->\n    <div>\n        custom\n        <slot /> <!-- 页面出口 -->\n    </div>\n</template>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"紧接着就可以在页面中使用"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"例如，在 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/home"}]},{"type":"text","value":" 页面中使用"}]},{"type":"element","tag":"code","props":{"code":"<!-- pages/home.vue -->\n<template>\n    <NuxtLayout name=\"custom\"> home </NuxtLayout>\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!-- pages/home.vue -->\n<template>\n    <NuxtLayout name=\"custom\"> home </NuxtLayout>\n</template>\n"}]}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"全局"},"children":[{"type":"text","value":"全局"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"有时我们需要全局的去应用布局，这时对 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"app.vue"}]},{"type":"text","value":" 进行修改"}]},{"type":"element","tag":"code","props":{"code":"<!-- app.vue -->\n<template>\n    header <!-- 这将应用到全局 -->\n    <NuxtPage />\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!-- app.vue -->\n<template>\n    header <!-- 这将应用到全局 -->\n    <NuxtPage />\n</template>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"但是这是一个无法关闭的全局布局，这时可以删除 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"app.vue"}]},{"type":"text","value":"，同时创建 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"layouts/default.vue"}]},{"type":"text","value":" 布局"}]},{"type":"element","tag":"code","props":{"code":"<!-- layouts/default.vue -->\n<template>\n    <div>\n        header\n        <slot /> <!-- 页面出口 -->\n    </div>\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!-- layouts/default.vue -->\n<template>\n    <div>\n        header\n        <slot /> <!-- 页面出口 -->\n    </div>\n</template>\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"该布局也是全局应用的，但是可以手动关闭"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"例如 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/about"}]},{"type":"text","value":" 页面不需要该布局"}]},{"type":"element","tag":"code","props":{"code":"<!-- pages/about.vue -->\n<script setup lang=\"ts\">\n    definePageMeta({\n        layout: false // 通过元信息的方式关闭 default 布局\n    })\n</script>\n\n<template> about </template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<!-- pages/about.vue -->\n<script setup lang=\"ts\">\n    definePageMeta({\n        layout: false // 通过元信息的方式关闭 default 布局\n    })\n</script>\n\n<template> about </template>\n"}]}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"h3","props":{"id":"注意事项"},"children":[{"type":"text","value":"注意事项"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"如果你是使用组件的形式去应用其他布局，"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"default"}]},{"type":"text","value":" 布局将与其他布局重合，那么需要手动关闭。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"例如，在 "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/home"}]},{"type":"text","value":" 页面中"}]},{"type":"element","tag":"code","props":{"code":"<script setup lang=\"ts\">\n    definePageMeta({\n        layout: false // 手动关闭 default 布局\n    })\n</script>\n\n<template>\n    <!-- 使用组件的方式应用 custom 布局 -->\n    <NuxtLayout name=\"custom\"> home </NuxtLayout>\n</template>\n","language":"html"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<script setup lang=\"ts\">\n    definePageMeta({\n        layout: false // 手动关闭 default 布局\n    })\n</script>\n\n<template>\n    <!-- 使用组件的方式应用 custom 布局 -->\n    <NuxtLayout name=\"custom\"> home </NuxtLayout>\n</template>\n"}]}]}]}]},"sidebarDepth":1,"_type":"markdown","_id":"content:2.nuxt3:2.features:layout-system.md","_source":"content","_file":"2.nuxt3/2.features/layout-system.md","_extension":"md"}]